# This is the nf-core CI workflow configuration for GitHub Actions
name: nf-core CI
# This workflow is triggered when a pull request is made to the 'dev' branch or when a new release is published
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
      - master
  release:
    types: [published]

# Setting environment variable for Nextflow logs
env:
  NXF_ANSI_LOG: false

# Define the jobs to be run in parallel
concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}"
  cancel-in-progress: true

# Define the jobs to be run
jobs:
  test:
    # Name the job with the corresponding profile, Nextflow version and aligner
    name: Run ${{ matrix.profile }}-${{ matrix.NXF_VER }}-${{ matrix.aligner }} pipeline test

      # Comment on the PR with the test results
      - name: PR comment with file
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: test.tap

  test-master:
    # Only run this job if the base branch is 'master'
    if: github.base_ref == 'master'
    name: Run pipeline with test data on master
    runs-on: ubuntu-latest
    # Define the matrix of variables to be used in the job
    strategy:
      matrix:
        NXF_VER: ["22.10.1", "latest-everything"]
        profile: ["docker"]
        aligner: ["salmon", "hisat2", "star_rsem", "star_salmon_skip", "star_salmon_with"]

    # Define the steps for the job
    steps:
      # Checkout the pipeline code from the repository
      - name: Check out pipeline code
        uses: actions/checkout@v3

      # Cache Test Data
      - name: Cache test data
        uses: actions/cache@v2
        with:
          path: /usr/local/bin/nextflow
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}-nextflow-

      # Install the specified version of Nextflow
      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v1
        with:
          version: "${{ matrix.NXF_VER }}"

      # Install nf-test
      - name: Install nf-test
        run: |
          wget -qO- https://code.askimed.com/install/nf-test | bash
          sudo mv nf-test /usr/local/bin/

      # Run nf-test with the specified aligner and output test results in TAP format
      - name: Run nf-test
        run: |
          nf-test test tests/pipeline/${{ matrix.aligner }}/ --tap=test.tap

      # If the test fails, output the software_versions.yml using the 'batcat' utility
      - name: Output log on failure
        if: failure()
        run: |
          sudo apt install bat > /dev/null
          batcat --decorations=always --color=always /home/runner/work/rnaseq/rnaseq/.nf-test/tests/*/output/pipeline_info/software_versions.yml

      # Comment on the PR with the test results
      - name: PR comment with file
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: test.tap
